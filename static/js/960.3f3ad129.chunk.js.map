{"version":3,"file":"static/js/960.3f3ad129.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","Pages/Home.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Table = styled.table`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 40px;\n`;\n\nexport const Thead = styled.thead`\n  width: 100px;\n  border-bottom-width: 1px;\n  position: sticky;\n  top: 4rem;\n  z-index: 10;\n  background-color: rgba(255, 255, 255, 1);\n  font-size: 18px;\n`;\n\nexport const TableRaw = styled.tr`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`;\n\nexport const TableHor = styled.th`\n  padding: 12px 16px;\n  text-align: left;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  font-weight: 500;\n`;\n\nexport const TotalContacts = styled.thead`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  font-size: 14px;\n\n  td {\n    padding-top: 14px;\n    padding-bottom: 14px;\n    font-weight: 500;\n  }\n`;\n\nexport const TableRawContent = styled.tr`\n  position: relative;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(245, 245, 245, 1);\n\n    .ButtonsWrapper {\n      display: block;\n    }\n  }\n`;\n\nexport const TableDataName = styled.td`\n  padding: 1px 16px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  font-size: 18px;\n`;\n\nexport const Name = styled.span`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  line-height: 24px;\n`;\n\nexport const TableDataNumber = styled.td`\n  padding: 1px 16px;\n  font-size: 18px;\n  line-height: 24px;\n`;\n\n// ====\nexport const ButtonsWrapper = styled.td`\n  display: none;\n  position: absolute;\n  top: 14px;\n  right: 8px;\n`;\n\nexport const EditBtn = styled.button`\n  padding: 4px 6px;\n  background: transparent;\n  margin-right: 10px;\n  border: none;\n  color: #00000051;\n  cursor: pointer;\n\n  &:hover {\n    color: rgba(0, 0, 0, 1);\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 4px 6px;\n  background: transparent;\n  border: none;\n  color: #00000051;\n  cursor: pointer;\n\n  &:hover {\n    color: rgba(0, 0, 0, 1);\n  }\n`;\n","import { MdDelete } from 'react-icons/md';\nimport { FiEdit } from 'react-icons/fi';\nimport {\n  Thead,\n  Table,\n  TableRaw,\n  TableHor,\n  TableDataName,\n  TableRawContent,\n  TableDataNumber,\n  DeleteBtn,\n  Name,\n  TotalContacts,\n  EditBtn,\n  ButtonsWrapper,\n} from './ContactsList.styled';\nimport Avatar from '@mui/material/Avatar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact, updatePhonebook } from 'redux/contactsSlice';\nimport { useNavigate } from 'react-router-dom';\n\nfunction getRandomHexColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport const ContactList = ({ stateItem }) => {\n  const contactsAmount = useSelector(state => state.contacts.items.length);\n  const contacts = useSelector(updatePhonebook);\n  const nameFromFilter = useSelector(state => state.filter);\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(nameFromFilter.toLowerCase())\n  );\n\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const handleContactClick = contactId => {\n    navigate(`contact/${contactId}`, { state: stateItem });\n  };\n\n  return (\n    <>\n      <Table>\n        <Thead>\n          <TableRaw>\n            <TableHor>Name</TableHor>\n            <TableHor>Phone Number</TableHor>\n          </TableRaw>\n        </Thead>\n        <TotalContacts>\n          <tr>\n            <td>CONTACTS ({contactsAmount})</td>\n          </tr>\n        </TotalContacts>\n        <tbody>\n          {filteredContacts.map(contact => {\n            const firstLetter = contact.name.slice(0, 1).toUpperCase();\n\n            const contactName = contact.name.charAt(0).toUpperCase();\n            const contactSliced = contact.name.slice(1);\n            const ContactNameCapital = contactName + contactSliced;\n\n            return (\n              <TableRawContent\n                key={contact.id}\n                onClick={() => handleContactClick(contact.id)}\n              >\n                <TableDataName>\n                  <Avatar\n                    sx={{\n                      bgcolor: getRandomHexColor(),\n                      width: 40,\n                      height: 40,\n                    }}\n                  >\n                    {firstLetter}\n                  </Avatar>\n                  <Name>{ContactNameCapital}</Name>\n                </TableDataName>\n\n                <TableDataNumber>{contact.number}</TableDataNumber>\n\n                <ButtonsWrapper className=\"ButtonsWrapper\">\n                  <EditBtn\n                    onClick={e => {\n                      e.stopPropagation();\n                      navigate(`contact/${contact.id}/edit`);\n                    }}\n                  >\n                    <FiEdit size={25} />\n                  </EditBtn>\n                  <DeleteBtn\n                    onClick={e => {\n                      e.stopPropagation();\n\n                      const isConfirmed = window.confirm('Delete contact?');\n                      if (isConfirmed) {\n                        dispatch(removeContact(contact.id));\n                      }\n                    }}\n                  >\n                    <MdDelete size={25} />\n                  </DeleteBtn>\n                </ButtonsWrapper>\n              </TableRawContent>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import { ContactList } from 'components/ContactsList/ContactsList';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ContactList stateItem={{ from: location }} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["Table","styled","_templateObject","_taggedTemplateLiteral","Thead","_templateObject2","TableRaw","_templateObject3","TableHor","_templateObject4","TotalContacts","_templateObject5","TableRawContent","_templateObject6","TableDataName","_templateObject7","Name","_templateObject8","TableDataNumber","_templateObject9","ButtonsWrapper","_templateObject10","EditBtn","_templateObject11","DeleteBtn","_templateObject12","getRandomHexColor","color","i","Math","floor","random","ContactList","_ref","stateItem","contactsAmount","useSelector","state","contacts","items","length","updatePhonebook","nameFromFilter","filter","filteredContacts","_ref2","name","toLowerCase","includes","navigate","useNavigate","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","map","contact","firstLetter","slice","toUpperCase","ContactNameCapital","charAt","onClick","contactId","id","concat","Avatar","sx","bgcolor","width","height","number","className","e","stopPropagation","FiEdit","size","window","confirm","removeContact","MdDelete","location","useLocation","from"],"sourceRoot":""}